{"version":3,"sources":["app/app.module.js","app/app.route.js","app/app.theme.js","app/components/app-info/app-info.ctrl.js","app/components/app-info/table-config.directive.js","app/components/app-info/table-debug.directive.js","app/components/app-info/table-tasks.directive.js","app/components/apps-table/apps-table.ctrl.js","app/components/services/services.ctrl.js","app/components/toolbar/toolbar.ctrl.js","app/components/toolbar/toolbar.directive.js","app/services/app-actions.factory.js","app/services/app-info.factory.js","app/services/apps-deployments.factory.js","app/services/apps-table-info.factory.js","app/services/host-name.factory.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public\\js\\app.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp', [\r\n      'ngMaterial',\r\n      'ngRoute',\r\n      'templates'\r\n    ]);\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .config(routeConfig);\r\n\r\n  routeConfig.$inject = ['$routeProvider'];\r\n\r\n  function routeConfig($routeProvider) {\r\n    //          to prevent '#', but including '<base hreg=\"/\">' not working\r\n    //          maybe because of Ember\r\n    //          $locationProvider.html5Mode(true);\r\n\r\n    $routeProvider\r\n      .when('/', {\r\n        redirectTo: '/services'\r\n      })\r\n      .when('/marathon/apps', {\r\n        templateUrl: 'app/components/apps-table/apps-table.tpl.html',\r\n        controller: 'AppsTableCtrl'\r\n      })\r\n      .when('/marathon/apps/:id', {\r\n        templateUrl: 'app/components/app-info/app-info.tpl.html',\r\n        controller: 'AppInfoCtrl'\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/'\r\n      });\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .config(themeConfig);\r\n\r\n  themeConfig.$inject = ['$mdThemingProvider'];\r\n\r\n  function themeConfig($mdThemingProvider) {\r\n\r\n    $mdThemingProvider.theme('default')\r\n      .primaryPalette('brown', {\r\n        'default': '900'\r\n      })\r\n      .accentPalette('orange', {\r\n        'hue-1': '400'\r\n      })\r\n      .warnPalette('red')\r\n      .backgroundPalette('grey', {\r\n        'default': '200'\r\n      });\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('AppInfoCtrl', AppInfoCtrl);\r\n\r\n  AppInfoCtrl.$inject = [\r\n    '$scope',\r\n    '$location',\r\n    '$routeParams',\r\n    '$mdDialog',\r\n    '$timeout',\r\n    'AppInfo',\r\n    'HostName',\r\n    'AppActions'\r\n  ];\r\n\r\n  function AppInfoCtrl($scope, $location, $routeParams, $mdDialog, $timeout, AppInfo, HostName, AppActions) {\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n    var promise;\r\n\r\n    $scope.appID = decodeURIComponent($routeParams.id);\r\n\r\n    $scope.appData = {};\r\n\r\n    $scope.tasksToKill = { ids: [] };\r\n\r\n    $scope.checkedTasks = {};\r\n    $scope.checkTask = checkTask;\r\n    $scope.checkAllTasks = checkAllTasks;\r\n    $scope.checkAllTaskBool = false;\r\n\r\n    getAppInfo();\r\n\r\n    ///////////////////\r\n\r\n    $scope.showTaskInfo = showTaskInfo;\r\n    $scope.goToAllApps = goToAllApps;\r\n\r\n    $scope.suspendApp = suspendApp;\r\n    $scope.scaleApp = scaleApp;\r\n    $scope.restartApp = restartApp;\r\n    $scope.destroyApp = destroyApp;\r\n    $scope.killTask = killTask;\r\n\r\n    //////////////////\r\n\r\n    function showTaskInfo(taskId) {\r\n      $location.path($location.path() + '/' + taskId);\r\n    }\r\n\r\n    function goToAllApps() {\r\n      $location.path('/marathon/apps');\r\n    }\r\n\r\n    function getAppInfo() {\r\n      HostName.get()\r\n        .then(function(hostName) {\r\n          return AppInfo.get(hostName, $scope.appID);\r\n        })\r\n        .then(function(response) {\r\n          $scope.appData = response.app;\r\n          promise = $timeout(getAppInfo, 10 * 1000);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function suspendApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/suspend-app-modal/suspend-app-modal.tpl.html',\r\n        controller: 'SuspendAppCtrl',\r\n        controllerAs: 'suspendApp',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function scaleApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/scale-app-modal/scale-app-modal.tpl.html',\r\n        controller: 'ScaleAppCtrl',\r\n        controllerAs: 'scaleApp',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function restartApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/restart-app-modal/restart-app-modal.tpl.html',\r\n        controller: 'RestartAppCtrl',\r\n        controllerAs: 'restartApp',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function destroyApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/destroy-app-modal/destroy-app-modal.tpl.html',\r\n        controller: 'DestroyAppCtrl',\r\n        controllerAs: 'destroyApp',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function killTask(shouldScale) {\r\n      HostName.get()\r\n        .then(function(response) {\r\n          $scope.hostName = response;\r\n          AppActions.killTask($scope.hostName, $scope.tasksToKill, shouldScale)\r\n            .then(function(response) {\r\n              getAppInfo();\r\n              $scope.checkAllTaskBool = false;\r\n              $scope.checkedTasks = {};\r\n              $scope.tasksToKill.ids = [];\r\n            });\r\n        });\r\n    }\r\n\r\n    function checkTask(taskId) {\r\n      var indexOfTask = $scope.tasksToKill.ids.indexOf(taskId);\r\n\r\n      if (indexOfTask === -1) {\r\n        $scope.tasksToKill.ids.push(taskId);\r\n      } else {\r\n        $scope.tasksToKill.ids.splice(indexOfTask, 1);\r\n      }\r\n    }\r\n\r\n    function checkAllTasks() {\r\n      $scope.tasksToKill.ids = [];\r\n\r\n      if ($scope.allCheckedState === true) {\r\n        $scope.allCheckedState = false;\r\n        for (var i = 0; i < $scope.appData.tasks.length; i++) {\r\n          var task1 = $scope.appData.tasks[i];\r\n          $scope.checkedTasks[task1.id] = false;\r\n        }\r\n      } else {\r\n        $scope.allCheckedState = true;\r\n        for (var k = 0; k < $scope.appData.tasks.length; k++) {\r\n          var task2 = $scope.appData.tasks[k];\r\n          $scope.checkedTasks[task2.id] = true;\r\n          $scope.checkTask(task2.id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('tableConfig', tableConfig);\r\n\r\n  function tableConfig() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/app-info/table-config.tpl.html'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('tableDebug', tableDebug);\r\n\r\n  function tableDebug() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/app-info/table-debug.tpl.html'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('tableTasks', tableTasks);\r\n\r\n  function tableTasks() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/app-info/table-tasks.tpl.html'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('AppsTableCtrl', AppsTableCtrl);\r\n\r\n  AppsTableCtrl.$inject = [\r\n    '$scope',\r\n    '$timeout',\r\n    '$location',\r\n    'AppsTableInfo',\r\n    'HostName'\r\n  ];\r\n\r\n  function AppsTableCtrl($scope, $timeout, $location, AppsTableInfo, HostName) {\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n    var promise;\r\n\r\n    $scope.appsList = [];\r\n\r\n    getAppsList();\r\n\r\n    ///////////////////\r\n\r\n    $scope.showAppInfo = showAppInfo;\r\n\r\n    //////////////////\r\n\r\n    function showAppInfo(app) {\r\n      $location.path('/marathon/apps/' + encodeURIComponent(app.id));\r\n    }\r\n\r\n    function getAppsList() {\r\n      HostName.get()\r\n        .then(function(hostName) {\r\n          return AppsTableInfo.get(hostName);\r\n        })\r\n        .then(function(response) {\r\n          $scope.appsList = response;\r\n          promise = $timeout(getAppsList, 10 * 1000);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('ServicesCtrl', ServicesCtrl);\r\n\r\n  ServicesCtrl.$inject = ['$scope', '$window', 'Services', 'ServiceDetails'];\r\n\r\n  function ServicesCtrl($scope, $window, Services, ServiceDetails) {\r\n\r\n    $scope.statusesFilterList = ['all', 'passing', 'walling', 'critical'];\r\n    $scope.statusesFilter = null;\r\n\r\n    $scope.serviceSelected = null;\r\n\r\n    $scope.serviceSelectedTags = [];\r\n\r\n    $scope.$watch('$parent.datacenterSelected', getServices);\r\n\r\n    ///////////////\r\n\r\n    // Fix crash of 'md-virtual-repeat-container' in Chrome\r\n    $scope.listStyle = {\r\n      height: ($window.innerHeight - 150) + 'px'\r\n    };\r\n\r\n    $scope.setServiceChoosen = setServiceChoosen;\r\n\r\n    ///////////////\r\n\r\n    function getServices(newVal, oldVal) {\r\n      // This 'if' prevents to run $watch on app initialization\r\n      if (newVal === oldVal) {\r\n        return;\r\n      }\r\n\r\n      Services.get($scope.datacenterSelected)\r\n        .then(function(response) {\r\n          $scope.servicesArr = response.data.array;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function setServiceChoosen(service) {\r\n        ServiceDetails.get(service.Name, $scope.datacenterSelected)\r\n          .then(function(response) {\r\n            $scope.serviceSelected = service;\r\n            $scope.serviceSelected.ServiceDetails = response.data.array;\r\n\r\n            $scope.serviceSelectedTags = [];\r\n            angular.forEach($scope.serviceSelected.ServiceDetails, function(value) {\r\n              angular.forEach(value.Service.Tags, function(value) {\r\n                if($scope.serviceSelectedTags.indexOf(value) === -1){\r\n                  $scope.serviceSelectedTags.push(value);\r\n                }\r\n              });\r\n            });\r\n          })\r\n          .catch(function(err) {\r\n            console.log(err);\r\n          });\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('ToolbarCtrl', ToolbarCtrl);\r\n\r\n  ToolbarCtrl.$inject = [];\r\n\r\n  function ToolbarCtrl() {\r\n    var vm = this;\r\n\r\n    ///////////////\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('toolbar', toolbar);\r\n\r\n  function toolbar() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/toolbar/toolbar.tpl.html',\r\n      controller: 'ToolbarCtrl'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppActions', AppActionsFactory);\r\n\r\n  AppActionsFactory.$inject = ['$http'];\r\n\r\n  function AppActionsFactory($http) {\r\n    var config = {\r\n      headers: {\r\n        'X-Requested-By': null,\r\n        'X-Requested-With': 'XMLHttpRequest'\r\n      }\r\n    };\r\n\r\n    return {\r\n      destroy: destroy,\r\n      killTask: killTask,\r\n      create: create,\r\n      restart: restart,\r\n      getVersion: getVersion,\r\n      get: get,\r\n      scale: scale,\r\n      suspend: suspend\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    function destroy(hostName, appID) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.delete('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function killTask(hostName, tasksToKill, shouldScale) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.post('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/tasks/delete?scale=' + shouldScale, tasksToKill, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function create(hostName, data) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.post('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps', data, config)\r\n        .then(function(response) {\r\n          console.log(response);\r\n          return response;\r\n        })\r\n        .catch(function (err) {\r\n          console.error(err);\r\n        });\r\n    }\r\n\r\n    function restart(hostName, appID) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      var data = {};\r\n      return $http.post('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '/restart', data, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getVersion(hostName, appID) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '/versions', config)\r\n        .then(function(response) {\r\n          return response.data.versions[0];\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function get(hostName, appID, appVersion) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '/versions/' + appVersion, config)\r\n        .then(function (response) {\r\n          return response.data;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function scale(hostName, appID, data) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.put('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '?force=true', data, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function suspend(hostName, appID, data) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.put('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '?force=true', data, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppInfo', AppInfoFactory);\r\n\r\n  AppInfoFactory.$inject = ['$http'];\r\n\r\n  function AppInfoFactory($http) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n    // /api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '?embed=app.taskStats\r\n\r\n    // for Brunch server\r\n    // http://nikke1.github.io/hard-data/mesos.json\r\n    function get(hostName, appID) {\r\n      return $http.get('http://nikke1.github.io/hard-data/mesos.json')\r\n        .then(function(response) {\r\n          return response.data;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppsDeployments', AppsDeploymentsFactory);\r\n\r\n  AppsDeploymentsFactory.$inject = ['$http'];\r\n\r\n  function AppsDeploymentsFactory($http) {\r\n    return {\r\n      get: get,\r\n      stop: stop,\r\n      rollback: rollback\r\n    };\r\n\r\n    ////////////////////\r\n\r\n    function get(hostName) {\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/deployments')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function stop(hostName, deployId) {\r\n      var config = {\r\n        headers: {\r\n          'X-Requested-By': hostName,\r\n          'X-Requested-With': 'XMLHttpRequest'\r\n        }\r\n      };\r\n\r\n      return $http.delete('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/deployments/' + deployId, config)\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function rollback(hostName, deployId) {\r\n      var config = {\r\n        headers: {\r\n          'X-Requested-By': hostName,\r\n          'X-Requested-With': 'XMLHttpRequest'\r\n        }\r\n      };\r\n\r\n      return $http.delete('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/deployments/' + deployId + '?force=true', config)\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppsTableInfo', AppsTableInfoFactory);\r\n\r\n  AppsTableInfoFactory.$inject = ['$http'];\r\n\r\n  function AppsTableInfoFactory($http) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n    // /api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps\r\n\r\n    // for Brunch server\r\n    // http://nikke1.github.io/hard-data/dataforapps.json\r\n    function get(hostName) {\r\n      return $http.get('http://nikke1.github.io/hard-data/dataforapps.json')\r\n        .then(function(response) {\r\n          return response.data.apps;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('HostName', HostNameFactory);\r\n\r\n  HostNameFactory.$inject = ['$http'];\r\n\r\n  function HostNameFactory($http) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    function get() {\r\n      return $http.get('/api/v1/clusters')\r\n        .then(function(response) {\r\n          return response.data.items[0].Clusters.cluster_name;\r\n        })\r\n        .then(function(clusterName) {\r\n          return $http.get('/api/v1/clusters/' + clusterName + '/components/MARATHON');\r\n        })\r\n        .then(function(response) {\r\n          return response.data.host_components[0].HostRoles.host_name;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n}());\r\n"]}