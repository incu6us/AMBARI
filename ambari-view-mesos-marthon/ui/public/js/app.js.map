{"version":3,"sources":["app/app.module.js","app/app.route.js","app/app.theme.js","app/app.visualisationConfigs.js","app/components/apps/app-info/app-info.ctrl.js","app/components/apps/app-info/table-config.directive.js","app/components/apps/app-info/table-debug.directive.js","app/components/apps/app-info/table-tasks.directive.js","app/components/apps/apps-table/apps-table.ctrl.js","app/components/apps/task-info/task-info.ctrl.js","app/components/deployments/deployments.ctrl.js","app/components/frameworks/framework-executor-tasks/framework-executor-tasks.ctrl.js","app/components/frameworks/framework-executors/framework-executors.ctrl.js","app/components/frameworks/frameworks-table/frameworks-table.ctrl.js","app/components/metrics/active-master-sidebar/active-master-sidebar.directive.js","app/components/metrics/metrics.ctrl.js","app/components/modals/deployments-rollback-modal/deployments-rollback-modal.ctrl.js","app/components/modals/deployments-stop-modal/deployments-stop-modal.ctrl.js","app/components/modals/destroy-app-modal/destroy-app-modal.ctrl.js","app/components/modals/new-app-modal/new-app-modal.ctrl.js","app/components/modals/restart-app-modal/restart-app-modal.ctrl.js","app/components/modals/scale-app-modal/scale-app-modal.ctrl.js","app/components/modals/suspend-app-modal/suspend-app-modal.ctrl.js","app/components/toolbar/toolbar.ctrl.js","app/components/toolbar/toolbar.directive.js","app/filters/to-fixed.filter.js","app/filters/to-gb.filter.js","app/filters/to-hpath.filter.js","app/filters/truncate-mesos-id.filter.js","app/services/cluster-name.factory.js","app/services/host-name.factory.js","app/services/marathon-app-actions.factory.js","app/services/marathon-app-info.factory.js","app/services/marathon-apps-deployments.factory.js","app/services/marathon-apps-table-info.factory.js","app/services/mesos-active-master-data.factory.js","app/services/mesos-components.factory.js","app/services/mesos-frameworks.factory.js","app/services/mesos-metrics.factory.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfrzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfxoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"public\\js\\app.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp', [\r\n      'ngMaterial',\r\n      'ngRoute',\r\n      'templates'\r\n    ]);\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .config(routeConfig);\r\n\r\n  routeConfig.$inject = ['$routeProvider'];\r\n\r\n  function routeConfig($routeProvider) {\r\n    //          to prevent '#', but including '<base hreg=\"/\">' not working\r\n    //          maybe because of Ember\r\n    //          $locationProvider.html5Mode(true);\r\n\r\n    $routeProvider\r\n      .when('/', {\r\n        redirectTo: '/mesos/metrics'\r\n      })\r\n      .when('/marathon/apps', {\r\n        templateUrl: 'app/components/apps/apps-table/apps-table.tpl.html',\r\n        controller: 'AppsTableCtrl'\r\n      })\r\n      .when('/marathon/apps/:id', {\r\n        templateUrl: 'app/components/apps/app-info/app-info.tpl.html',\r\n        controller: 'AppInfoCtrl'\r\n      })\r\n      .when('/marathon/apps/:id/:taskId', {\r\n        templateUrl: 'app/components/apps/task-info/task-info.tpl.html',\r\n        controller: 'TaskInfoCtrl'\r\n      })\r\n      .when('/marathon/deployments', {\r\n        templateUrl: 'app/components/deployments/deployments.tpl.html',\r\n        controller: 'AppsDeploymentsCtrl'\r\n      })\r\n      .when('/mesos/metrics', {\r\n        templateUrl: 'app/components/metrics/metrics.tpl.html',\r\n        controller: 'MetricsCtrl'\r\n      })\r\n      .when('/mesos/frameworks', {\r\n        templateUrl: 'app/components/frameworks/frameworks-table/frameworks-table.tpl.html',\r\n        controller: 'FrameworksTableCtrl'\r\n      })\r\n      .when('/mesos/frameworks/:frameworkId', {\r\n        templateUrl: 'app/components/frameworks/framework-executors/framework-executors.tpl.html',\r\n        controller: 'FrameworkExecutorsCtrl'\r\n      })\r\n      .when('/mesos/frameworks/:frameworkId/:slaveId/:executorId', {\r\n        templateUrl: 'app/components/frameworks/framework-executor-tasks/framework-executor-tasks.tpl.html',\r\n        controller: 'FrameworkExecutorTasksCtrl'\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/'\r\n      });\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .config(themeConfig);\r\n\r\n  themeConfig.$inject = ['$mdThemingProvider'];\r\n\r\n  function themeConfig($mdThemingProvider) {\r\n\r\n    $mdThemingProvider.theme('default')\r\n      .primaryPalette('brown', {\r\n        'default': '900'\r\n      })\r\n      .accentPalette('orange', {\r\n        'hue-1': '400'\r\n      })\r\n      .warnPalette('red')\r\n      .backgroundPalette('grey', {\r\n        'default': '200'\r\n      });\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .constant('visualisationConfigs', function() {\r\n      // recursive function to clone an object. If a non object parameter\r\n      // is passed in, that parameter is returned and no recursion occurs.\r\n      function clone(obj) {\r\n        if (obj === null || typeof obj !== 'object') {\r\n          return obj;\r\n        }\r\n\r\n        var temp = obj.constructor(); // give temp the original obj's constructor\r\n        for (var key in obj) {\r\n          temp[key] = clone(obj[key]);\r\n        }\r\n\r\n        return temp;\r\n      }\r\n\r\n      // pieCharts configs to clone\r\n      var pieChartOptionsNoColorMaster = {\r\n        chart: {\r\n          type: 'pieChart',\r\n          height: 150,\r\n          donut: true,\r\n          x: function(d) {\r\n            return d.name;\r\n          },\r\n          y: function(d) {\r\n            return d.size;\r\n          },\r\n          showLegend: false,\r\n          showLabels: false,\r\n          transitionDuration: 500\r\n        }\r\n      };\r\n      var pieChartOptionsNoColorSlave = {\r\n        chart: {\r\n          type: 'pieChart',\r\n          height: 150,\r\n          x: function(d) {\r\n            return d.name;\r\n          },\r\n          y: function(d) {\r\n            return d.size;\r\n          },\r\n          showLegend: false,\r\n          showLabels: false,\r\n\r\n          transitionDuration: 500,\r\n          legend: {\r\n            margin: {\r\n              top: 5,\r\n              right: 140,\r\n              bottom: 5,\r\n              left: 0\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      // Network configs to clone\r\n      var networkNodeConfig = {\r\n        id: 0,\r\n        label: '',\r\n        borderWidth: 0,\r\n        borderWidthSelected: 0,\r\n        // shadow: true,\r\n        font: {\r\n          size: 11\r\n        },\r\n        shape: \"circle\"\r\n      };\r\n      var networkEdgeConfig = {\r\n        length: 150,\r\n        // shadow: true,\r\n        color: \"#b3b3ff\",\r\n        id: 0,\r\n        from: 1,\r\n        to: 0\r\n      };\r\n\r\n      // Network Main config\r\n      var options = {\r\n        autoResize: true,\r\n        height: '100%',\r\n        width: '100%',\r\n        interaction: {\r\n          navigationButtons: true,\r\n          keyboard: true,\r\n          hover: true\r\n        }\r\n      };\r\n\r\n      // D3 Main config\r\n      var d3Config = {\r\n        extended: true,\r\n        autorefresh: true,\r\n        debounce: 10\r\n      };\r\n\r\n      // Clone object without reference(!)\r\n      var pieChartOptionsActiveMasterCpu = clone(pieChartOptionsNoColorMaster);\r\n      // Add color\r\n      pieChartOptionsActiveMasterCpu.chart.color = [\"#512DA8\", \"#A98CEF\"];\r\n\r\n      var pieChartOptionsActiveMasterMem = clone(pieChartOptionsNoColorMaster);\r\n      pieChartOptionsActiveMasterMem.chart.color = [\"#9C27B0\", \"#E691F5\"];\r\n\r\n      var pieChartOptionsActiveMasterDisk = clone(pieChartOptionsNoColorMaster);\r\n      pieChartOptionsActiveMasterDisk.chart.color = [\"#00BCD4\", \"#A8ECF5\"];\r\n\r\n      var pieChartOptionsHostCpu = clone(pieChartOptionsNoColorSlave);\r\n      pieChartOptionsHostCpu.chart.color = [\"#512DA8\", \"#A98CEF\"];\r\n\r\n      var pieChartOptionsHostMem = clone(pieChartOptionsNoColorSlave);\r\n      pieChartOptionsHostMem.chart.color = [\"#9C27B0\", \"#E691F5\"];\r\n\r\n      var pieChartOptionsHostDisk = clone(pieChartOptionsNoColorSlave);\r\n      pieChartOptionsHostDisk.chart.color = [\"#00BCD4\", \"#A8ECF5\"];\r\n\r\n\r\n      var networkNodeMaster = clone(networkNodeConfig);\r\n      networkNodeMaster.color = \"#87b6de\";\r\n      // networkNodeMaster.font = {size: 9};\r\n\r\n      var networkNodeSlave = clone(networkNodeConfig);\r\n      networkNodeSlave.color = \"#b3b3ff\";\r\n      networkNodeSlave.group = 2;\r\n\r\n      var networkEdgeSlave = clone(networkEdgeConfig);\r\n\r\n      var networkNodesService = [{\r\n        id: 10000,\r\n        borderWidth: 0,\r\n        borderWidthSelected: 0,\r\n        label: \"CPU\",\r\n        shape: \"dot\",\r\n        // shadow: true,\r\n        color: {\r\n          background: \"#5cb85c\",\r\n          hover: \"#512DA8\"\r\n        },\r\n        group: 5,\r\n        size: 10,\r\n        font: {\r\n          size: 11\r\n        },\r\n        hidden: true\r\n      }, {\r\n        id: 10001,\r\n        borderWidth: 0,\r\n        borderWidthSelected: 0,\r\n        label: \"Memory\",\r\n        shape: \"dot\",\r\n        // shadow: true,\r\n        color: {\r\n          background: \"#5cb85c\",\r\n          hover: \"#9C27B0\"\r\n        },\r\n        group: 5,\r\n        size: 10,\r\n        font: {\r\n          size: 11\r\n        },\r\n        hidden: true\r\n      }, {\r\n        id: 10002,\r\n        borderWidth: 0,\r\n        borderWidthSelected: 0,\r\n        label: \"Disk\",\r\n        shape: \"dot\",\r\n        // shadow: true,\r\n        color: {\r\n          background: \"#5cb85c\",\r\n          hover: \"#00BCD4\"\r\n        },\r\n        group: 5,\r\n        size: 10,\r\n        font: {\r\n          size: 11\r\n        },\r\n        hidden: true\r\n      }, {\r\n        id: 10003,\r\n        borderWidth: 0,\r\n        borderWidthSelected: 0,\r\n        label: \"All\",\r\n        shape: \"dot\",\r\n        // shadow: true,\r\n        color: {\r\n          background: \"#5cb85c\",\r\n          hover: \"#304FFE\"\r\n        },\r\n        group: 5,\r\n        size: 10,\r\n        font: {\r\n          size: 11\r\n        },\r\n        hidden: true\r\n      }];\r\n      var networkEdgesService = [{\r\n          id: 10000,\r\n          from: 10000,\r\n          to: 1,\r\n          length: 1,\r\n          hidden: true\r\n        }, {\r\n          id: 10001,\r\n          from: 10001,\r\n          to: 1,\r\n          length: 1,\r\n          hidden: true\r\n        }, {\r\n          id: 10002,\r\n          from: 10002,\r\n          to: 1,\r\n          length: 1,\r\n          hidden: true\r\n        }, {\r\n          id: 10003,\r\n          from: 10003,\r\n          to: 1,\r\n          length: 1,\r\n          hidden: true\r\n        }];\r\n\r\n      return {\r\n        options: options,\r\n        d3Config: d3Config,\r\n\r\n        pieChartOptionsActiveMasterCpu: pieChartOptionsActiveMasterCpu,\r\n        pieChartOptionsActiveMasterMem: pieChartOptionsActiveMasterMem,\r\n        pieChartOptionsActiveMasterDisk: pieChartOptionsActiveMasterDisk,\r\n        pieChartOptionsHostCpu: pieChartOptionsHostCpu,\r\n        pieChartOptionsHostMem: pieChartOptionsHostMem,\r\n        pieChartOptionsHostDisk: pieChartOptionsHostDisk,\r\n\r\n        networkNodeMaster: networkNodeMaster,\r\n\r\n        networkNodeSlave: networkNodeSlave,\r\n        networkEdgeSlave: networkEdgeSlave,\r\n\r\n        networkNodesService: networkNodesService,\r\n        networkEdgesService: networkEdgesService\r\n      };\r\n\r\n    });\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('AppInfoCtrl', AppInfoCtrl);\r\n\r\n  AppInfoCtrl.$inject = [\r\n    '$scope',\r\n    '$location',\r\n    '$routeParams',\r\n    '$mdDialog',\r\n    '$timeout',\r\n    'AppInfo',\r\n    'HostName',\r\n    'AppActions'\r\n  ];\r\n\r\n  function AppInfoCtrl($scope, $location, $routeParams, $mdDialog, $timeout, AppInfo, HostName, AppActions) {\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n    var promise;\r\n\r\n    $scope.appID = decodeURIComponent($routeParams.id);\r\n\r\n    $scope.appData = {};\r\n\r\n    $scope.tasksToKill = { ids: [] };\r\n\r\n    $scope.checkedTasks = {};\r\n    $scope.checkTask = checkTask;\r\n    $scope.checkAllTasks = checkAllTasks;\r\n    $scope.checkAllTaskBool = false;\r\n\r\n    getAppInfo();\r\n\r\n    ///////////////////\r\n\r\n    $scope.showTaskInfo = showTaskInfo;\r\n    $scope.goToAllApps = goToAllApps;\r\n\r\n    $scope.suspendApp = suspendApp;\r\n    $scope.scaleApp = scaleApp;\r\n    $scope.restartApp = restartApp;\r\n    $scope.destroyApp = destroyApp;\r\n    $scope.killTask = killTask;\r\n\r\n    //////////////////\r\n\r\n    function showTaskInfo(taskId) {\r\n      $location.path($location.path() + '/' + taskId);\r\n    }\r\n\r\n    function goToAllApps() {\r\n      $location.path('/marathon/apps');\r\n    }\r\n\r\n    function getAppInfo() {\r\n      HostName.get()\r\n        .then(function(hostName) {\r\n          return AppInfo.get(hostName, $scope.appID);\r\n        })\r\n        .then(function(response) {\r\n          $scope.appData = response.app;\r\n          promise = $timeout(getAppInfo, 10 * 1000);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function suspendApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/suspend-app-modal/suspend-app-modal.tpl.html',\r\n        controller: 'SuspendAppCtrl',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function scaleApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/scale-app-modal/scale-app-modal.tpl.html',\r\n        controller: 'ScaleAppCtrl',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function restartApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/restart-app-modal/restart-app-modal.tpl.html',\r\n        controller: 'RestartAppCtrl',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function destroyApp(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/destroy-app-modal/destroy-app-modal.tpl.html',\r\n        controller: 'DestroyAppCtrl',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n    function killTask(shouldScale) {\r\n      HostName.get()\r\n        .then(function(response) {\r\n          $scope.hostName = response;\r\n          AppActions.killTask($scope.hostName, $scope.tasksToKill, shouldScale)\r\n            .then(function(response) {\r\n              getAppInfo();\r\n              $scope.checkAllTaskBool = false;\r\n              $scope.checkedTasks = {};\r\n              $scope.tasksToKill.ids = [];\r\n            });\r\n        });\r\n    }\r\n\r\n    function checkTask(taskId) {\r\n      var indexOfTask = $scope.tasksToKill.ids.indexOf(taskId);\r\n\r\n      if (indexOfTask === -1) {\r\n        $scope.tasksToKill.ids.push(taskId);\r\n      } else {\r\n        $scope.tasksToKill.ids.splice(indexOfTask, 1);\r\n      }\r\n    }\r\n\r\n    function checkAllTasks() {\r\n      $scope.tasksToKill.ids = [];\r\n\r\n      if ($scope.allCheckedState === true) {\r\n        $scope.allCheckedState = false;\r\n        for (var i = 0; i < $scope.appData.tasks.length; i++) {\r\n          var task1 = $scope.appData.tasks[i];\r\n          $scope.checkedTasks[task1.id] = false;\r\n        }\r\n      } else {\r\n        $scope.allCheckedState = true;\r\n        for (var k = 0; k < $scope.appData.tasks.length; k++) {\r\n          var task2 = $scope.appData.tasks[k];\r\n          $scope.checkedTasks[task2.id] = true;\r\n          $scope.checkTask(task2.id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('tableConfig', tableConfig);\r\n\r\n  function tableConfig() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/apps/app-info/table-config.tpl.html'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('tableDebug', tableDebug);\r\n\r\n  function tableDebug() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/apps/app-info/table-debug.tpl.html'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('tableTasks', tableTasks);\r\n\r\n  function tableTasks() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/apps/app-info/table-tasks.tpl.html'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('AppsTableCtrl', AppsTableCtrl);\r\n\r\n  AppsTableCtrl.$inject = [\r\n    '$scope',\r\n    '$timeout',\r\n    '$location',\r\n    '$mdDialog',\r\n    'AppsTableInfo',\r\n    'HostName'\r\n  ];\r\n\r\n  function AppsTableCtrl($scope, $timeout, $location, $mdDialog, AppsTableInfo, HostName) {\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n    var promise;\r\n\r\n    $scope.appsList = [];\r\n\r\n    getAppsList();\r\n\r\n    ///////////////////\r\n\r\n    $scope.showAppInfo = showAppInfo;\r\n    $scope.newAppModal = newAppModal;\r\n\r\n    //////////////////\r\n\r\n    function showAppInfo(app) {\r\n      $location.path('/marathon/apps/' + encodeURIComponent(app.id));\r\n    }\r\n\r\n    function getAppsList() {\r\n      HostName.get()\r\n        .then(function(hostName) {\r\n          return AppsTableInfo.get(hostName);\r\n        })\r\n        .then(function(response) {\r\n          $scope.appsList = response;\r\n          promise = $timeout(getAppsList, 10 * 1000);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function newAppModal(ev) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/new-app-modal/new-app-modal.tpl.html',\r\n        controller: 'NewAppCtrl',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true\r\n      });\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('TaskInfoCtrl', TaskInfoCtrl);\r\n\r\n  TaskInfoCtrl.$inject = [\r\n    '$scope',\r\n    '$location',\r\n    '$routeParams',\r\n    'AppInfo',\r\n    'HostName',\r\n  ];\r\n\r\n  function TaskInfoCtrl($scope, $location, $routeParams, AppInfo, HostName) {\r\n    $scope.appID = decodeURIComponent($routeParams.id);\r\n    $scope.taskID = $routeParams.taskId;\r\n\r\n    $scope.appData = {};\r\n    $scope.taskData = {};\r\n\r\n    getAppInfo();\r\n\r\n    ///////////////////\r\n\r\n    $scope.goToApp = goToApp;\r\n    $scope.goToAllApps = goToAllApps;\r\n\r\n    ///////////////////\r\n\r\n    function goToApp() {\r\n      $location.path('/marathon/apps/' + encodeURIComponent($scope.appID));\r\n    }\r\n\r\n    function goToAllApps() {\r\n      $location.path('/marathon/apps/');\r\n    }\r\n\r\n    function getAppInfo() {\r\n      HostName.get()\r\n        .then(function(hostName) {\r\n          return AppInfo.get(hostName, $scope.appID);\r\n        })\r\n        .then(function(response) {\r\n          $scope.appData = response.app;\r\n          getTaskInfo();\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getTaskInfo() {\r\n      for (var i = 0, length = $scope.appData.tasks.length; i < length; i++) {\r\n        if ($scope.taskID === $scope.appData.tasks[i].id) {\r\n          $scope.taskData = $scope.appData.tasks[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('AppsDeploymentsCtrl', AppsDeploymentsCtrl);\r\n\r\n  AppsDeploymentsCtrl.$inject = [\r\n    '$scope',\r\n    '$timeout',\r\n    '$location',\r\n    '$mdDialog',\r\n    '$scope',\r\n    'AppsDeployments',\r\n    'HostName'\r\n  ];\r\n\r\n  function AppsDeploymentsCtrl($scope, $timeout, $location, $mdDialog, AppsDeployments, HostName) {\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n    var promise;\r\n\r\n    var hostName = null;\r\n\r\n    $scope.deployList = [];\r\n\r\n    /////////////////////\r\n\r\n    $scope.showAppInfo = showAppInfo;\r\n    $scope.stopDeploy = stopDeploy;\r\n    $scope.rollbackDeploy = rollbackDeploy;\r\n\r\n    /////////////////////\r\n\r\n    function showAppInfo(appId) {\r\n      $location.path('/marathon/apps/' + encodeURIComponent(appId));\r\n    }\r\n\r\n    function getDeploysList() {\r\n      HostName.get()\r\n        .then(function(response) {\r\n          hostName = response;\r\n          return AppsDeployments.get(hostName);\r\n        })\r\n        .then(function(response) {\r\n          $scope.deployList = response.data.array;\r\n          promise = $timeout(getDeploysList, 10 * 1000);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function stopDeploy(ev, deployId) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/deployments-stop-modal/deployments-stop-modal.tpl.html',\r\n        controller: 'StopAppDeployCtrl',\r\n        controllerAs: 'stopAppDeploy',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true,\r\n        locals: {\r\n          deployId: deployId,\r\n          hostName: hostName\r\n        }\r\n      });\r\n    }\r\n\r\n    function rollbackDeploy(ev, deployId) {\r\n      $mdDialog.show({\r\n        templateUrl: 'app/components/modals/deployments-rollback-modal/deployments-rollback-modal.tpl.html',\r\n        controller: 'RollbackAppDeployCtrl',\r\n        controllerAs: 'rollbackAppDeploy',\r\n        parent: angular.element(document.querySelector('#content')),\r\n        targetEvent: ev,\r\n        clickOutsideToClose: true,\r\n        locals: {\r\n          deployId: deployId,\r\n          hostName: hostName\r\n        }\r\n      });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('FrameworkExecutorTasksCtrl', FrameworkExecutorTasksCtrl);\r\n\r\n  FrameworkExecutorTasksCtrl.$inject = [\r\n    '$scope',\r\n    '$q',\r\n    '$timeout',\r\n    '$location',\r\n    '$routeParams',\r\n    'visualisationConfigs',\r\n    'ClusterName',\r\n    'ActiveMasterData',\r\n    'Frameworks'\r\n  ];\r\n\r\n  function FrameworkExecutorTasksCtrl($scope, $q, $timeout, $location, $routeParams, visualisationConfigs, ClusterName, ActiveMasterData, Frameworks) {\r\n    var VERSION = \"0.1.0\";\r\n    var DEBUG = false;\r\n\r\n    // @TODO think about place of SlaveID in 'route' and 'breadcrumb'. Maybe -> #/mesos/:slaveId/:frameworkId and #/mesos/:slaveId/:frameworkId/:executorId\r\n\r\n    // When we are on 'Frameworks Table' - we get info about Frameworks from ActiveMaster.\r\n    // When we are on 'Framework Executors' - we get info about Executors from ActiveMaster. BUT ActiveMaster do not containt(!) info abou tasks.\r\n    // So we get from Executor - ID of Slave(1), on which it runned.\r\n    // Then we get list of Slaves of ActiveMaster. Then we compair (1) with every SlaveID from List and found slave with our executor.\r\n    // Then we get info from that slave. This info containt Frameworks, Executors and Tasks(!) wich are runned on slave.\r\n\r\n    var promise;\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n\r\n    var activeMaster = null;\r\n\r\n    $scope.frameworkExecutorTasks = [];\r\n\r\n    $scope.frameworkId = decodeURIComponent($routeParams.frameworkId);\r\n    $scope.slaveId = decodeURIComponent($routeParams.slaveId);\r\n    $scope.executorId = decodeURIComponent($routeParams.executorId);\r\n\r\n    runApp();\r\n\r\n    ///////////////////////\r\n\r\n    $scope.goToFrameworksTable = goToFrameworksTable;\r\n    $scope.goToFrameworkExecutors = goToFrameworkExecutors;\r\n\r\n    //////////////////////\r\n\r\n    function goToFrameworksTable() {\r\n      $location.path('/mesos/frameworks/');\r\n    }\r\n\r\n    function goToFrameworkExecutors(executorId) {\r\n      $location.path('/mesos/frameworks/' + executorId);\r\n    }\r\n\r\n    function runApp() {\r\n      ClusterName.get()\r\n        // .then(function(response) {\r\n        //   return response.data.items[0].Clusters.cluster_name;\r\n        // })\r\n        // .then(function(clusterName) {\r\n        //   return Components.getMasters();\r\n        // })\r\n        // .then(function(mastersData) {\r\n        //   var masterItems = mastersData.data.host_components;\r\n        //   var promises = [];\r\n        //\r\n        //   for (var i = 0; i < masterItems.length; i++) {\r\n        //     promises.push(getActiveMaster(masterItems[i].HostRoles.host_name));\r\n        //   }\r\n        //   return $q.all(promises);\r\n        // })\r\n        .then(function() {\r\n          return ActiveMasterData.getSlaves(VERSION, activeMaster);\r\n        })\r\n        .then(function(response) {\r\n          return response.data.slaves;\r\n        })\r\n        .then(function(activeMasterSlaves) {\r\n          for (var i = 0; i < activeMasterSlaves.length; i++) {\r\n            if (activeMasterSlaves[i].id === $scope.slaveId) {\r\n              var prefix = activeMasterSlaves[i].pid.replace(new RegExp(\"(.*)@(.*)\"), \"$1\");\r\n              var host = activeMasterSlaves[i].pid.replace(new RegExp(\"(.*)@(.*)\"), \"$2\");\r\n              var stateUrl = \"http://\" + host + \"/\" + prefix + \"/state.json\";\r\n              return Frameworks.get(VERSION, stateUrl);\r\n            }\r\n          }\r\n        })\r\n        .then(function(response) {\r\n          angular.forEach(response.data.frameworks, function(value, key) {\r\n            if (value.id === $scope.frameworkId) {\r\n              angular.forEach(value.executors, function(value1, key1) {\r\n                if (value1.id === $scope.executorId) {\r\n                  $scope.tasks = value1.tasks;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getActiveMaster(masterHost) {\r\n      return Metrics.getForMaster(VERSION, masterHost)\r\n        .then(function(response) {\r\n          var items = response.data;\r\n\r\n          if(items[\"master/elected\"] === 1.0) {\r\n            activeMaster = masterHost;\r\n          }\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('FrameworkExecutorsCtrl', FrameworkExecutorsCtrl);\r\n\r\n  FrameworkExecutorsCtrl.$inject = [\r\n    '$scope',\r\n    '$q',\r\n    '$timeout',\r\n    '$location',\r\n    '$routeParams',\r\n    'visualisationConfigs',\r\n    'ClusterName',\r\n    'ActiveMasterData'\r\n  ];\r\n\r\n  function FrameworkExecutorsCtrl($scope, $q, $timeout, $location, $routeParams, visualisationConfigs, ClusterName, ActiveMasterData) {\r\n    var VERSION = \"0.1.0\";\r\n    var DEBUG = false;\r\n\r\n    var promise;\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n\r\n    var activeMaster = null;\r\n\r\n    $scope.frameworksExecutors = [];\r\n\r\n    $scope.frameworkId = decodeURIComponent($routeParams.frameworkId);\r\n\r\n    runApp();\r\n\r\n    ///////////////////////\r\n\r\n    $scope.goToFrameworksTable = goToFrameworksTable;\r\n    $scope.goToExecutorTasks = goToExecutorTasks;\r\n    $scope.goToExecutorSandbox = goToExecutorSandbox;\r\n\r\n    //////////////////////\r\n\r\n    function goToFrameworksTable() {\r\n      $location.path('/mesos/frameworks/');\r\n    }\r\n\r\n    function goToExecutorTasks(slaveId, executorId) {\r\n      $location.path($location.path() + '/' + slaveId + '/' + executorId);\r\n    }\r\n\r\n    function goToExecutorSandbox() {\r\n      $location.path($location.path() + '/' + taskId);\r\n    }\r\n\r\n    function runApp() {\r\n      ClusterName.get()\r\n        // .then(function(response) {\r\n        //   return response.data.items[0].Clusters.cluster_name;\r\n        // })\r\n        // .then(function(clusterName) {\r\n        //   return Components.getMasters();\r\n        // })\r\n        // .then(function(mastersData) {\r\n        //   var masterItems = mastersData.data.host_components;\r\n        //   var promises = [];\r\n        //\r\n        //   for (var i = 0; i < masterItems.length; i++) {\r\n        //     promises.push(getActiveMaster(masterItems[i].HostRoles.host_name));\r\n        //   }\r\n        //   return $q.all(promises);\r\n        // })\r\n        .then(function() {\r\n          return ActiveMasterData.getState(VERSION, activeMaster);\r\n        })\r\n        .then(function(response) {\r\n          $scope.frameworks = response.data.frameworks;\r\n\r\n          angular.forEach($scope.frameworks, function(value, key) {\r\n            if (value.id == $scope.frameworkId) {\r\n              $scope.frameworksExecutors = value.executors;\r\n            }\r\n          });\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getActiveMaster(masterHost) {\r\n      return Metrics.getForMaster(VERSION, masterHost)\r\n        .then(function(response) {\r\n          var items = response.data;\r\n\r\n          if(items[\"master/elected\"] === 1.0) {\r\n            activeMaster = masterHost;\r\n          }\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('FrameworksTableCtrl', FrameworksTableCtrl);\r\n\r\n  FrameworksTableCtrl.$inject = [\r\n    '$scope',\r\n    '$q',\r\n    '$timeout',\r\n    '$location',\r\n    'visualisationConfigs',\r\n    'ClusterName',\r\n    'ActiveMasterData'\r\n  ];\r\n\r\n  function FrameworksTableCtrl($scope, $q, $timeout, $location, visualisationConfigs, ClusterName, ActiveMasterData) {\r\n    var VERSION = \"0.1.0\";\r\n    var DEBUG = false;\r\n\r\n    var promise;\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n    });\r\n\r\n    var activeMaster = null;\r\n\r\n    $scope.frameworksActive = null;\r\n    $scope.frameworksCompleted = null;\r\n    $scope.executorsInFrameworks = [];\r\n\r\n    runApp();\r\n\r\n    ///////////////////////\r\n\r\n    $scope.goToFrameworkExecutors = goToFrameworkExecutors;\r\n\r\n    //////////////////////\r\n\r\n    function goToFrameworkExecutors(frameworkId) {\r\n      $location.path('/mesos/frameworks/' + encodeURIComponent(frameworkId));\r\n    }\r\n\r\n    function runApp() {\r\n      ClusterName.get()\r\n        // .then(function(response) {\r\n        //   return response.data.items[0].Clusters.cluster_name;\r\n        // })\r\n        // .then(function(clusterName) {\r\n        //   return Components.getMasters();\r\n        // })\r\n        // .then(function(mastersData) {\r\n        //   var masterItems = mastersData.data.host_components;\r\n        //   var promises = [];\r\n        //\r\n        //   for (var i = 0; i < masterItems.length; i++) {\r\n        //     promises.push(getActiveMaster(masterItems[i].HostRoles.host_name));\r\n        //   }\r\n        //   return $q.all(promises);\r\n        // })\r\n        .then(function() {\r\n          return ActiveMasterData.getState(VERSION, activeMaster);\r\n        })\r\n        .then(function(response) {\r\n          $scope.frameworksActive = response.data.frameworks;\r\n          $scope.frameworksCompleted = response.data.completed_frameworks;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getActiveMaster(masterHost) {\r\n      return Metrics.getForMaster(VERSION, masterHost)\r\n        .then(function(response) {\r\n          var items = response.data;\r\n\r\n          if(items[\"master/elected\"] === 1.0) {\r\n            activeMaster = masterHost;\r\n          }\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('masterInfo', masterInfo);\r\n\r\n  function masterInfo() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/metrics/active-master-sidebar/active-master-sidebar.tpl.html'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('MetricsCtrl', MetricsCtrl);\r\n\r\n  MetricsCtrl.$inject = [\r\n    '$scope',\r\n    '$q',\r\n    '$interval',\r\n    '$timeout',\r\n    '$mdSidenav',\r\n    'visualisationConfigs',\r\n    'ClusterName',\r\n    'Components',\r\n    'Metrics',\r\n    'ActiveMasterData',\r\n    'Frameworks'\r\n  ];\r\n\r\n  function MetricsCtrl($scope, $q, $interval, $timeout, $mdSidenav, visualisationConfigs, ClusterName, Components, Metrics, ActiveMasterData, Frameworks) {\r\n    var VERSION = \"0.1.0\";\r\n    var DEBUG = false;\r\n\r\n    // PROBLEM MetricsCtrl is parent $scope for vis-network directive. So $scope.infoPanel === true/false not work correct, because of different scopes.\r\n    // SOLUTION: $interval solves it ^, but don't know how.\r\n    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    // try use $scope.$digest(); or $watch;\r\n    var intervalPromise =  $interval(function() {\r\n    }, 1*1000);\r\n\r\n    var promise;\r\n    $scope.$on('$locationChangeStart', function() {\r\n      $timeout.cancel(promise);\r\n      $interval.cancel(intervalPromise);\r\n    });\r\n\r\n    $scope.infoPanel = false;\r\n\r\n    $scope.clusterName = null;\r\n    $scope.activeMaster = null;\r\n\r\n    $scope.mastersList = [];\r\n    $scope.allHostsList = [];\r\n\r\n    // Additional Info in HostInfoPanel\r\n    $scope.executorsRunning = null;\r\n    $scope.frameworksActive = null;\r\n\r\n    // Network data to draw\r\n    $scope.nodes = [];\r\n    $scope.edges = [];\r\n    $scope.network_data = {\r\n      nodes: $scope.nodes,\r\n      edges: $scope.edges\r\n    };\r\n    // Network events\r\n    $scope.events = {};\r\n    // Network main config\r\n    $scope.options = visualisationConfigs().options;\r\n\r\n    // D3 Main config\r\n    $scope.d3Config = visualisationConfigs().d3Config;\r\n    // pieCharts metrics for activeMaster\r\n    $scope.activeMaster = {\r\n      cpu: [{}],\r\n      mem: [{}],\r\n      disk: [{}]\r\n    };\r\n    // Temp activeMaster Storage - fixing bug when pieChart showed small: https://github.com/krispo/angular-nvd3/issues/85\r\n    var activeMasterDataTemp = {\r\n      cpu: null,\r\n      mem: null,\r\n      disk: null\r\n    };\r\n    // pieCharts metrics for Hosts\r\n    $scope.hostData = {\r\n      general: [],\r\n      cpu: [{}],\r\n      mem: [{}],\r\n      disk: [{}]\r\n    };\r\n    // pieCharts configs\r\n    $scope.optionsActiveMasterCpu = visualisationConfigs().pieChartOptionsActiveMasterCpu;\r\n    $scope.optionsActiveMasterMem = visualisationConfigs().pieChartOptionsActiveMasterMem;\r\n    $scope.optionsActiveMasterDisk = visualisationConfigs().pieChartOptionsActiveMasterDisk;\r\n    $scope.optionsHostCpu = visualisationConfigs().pieChartOptionsHostCpu;\r\n    $scope.optionsHostMem = visualisationConfigs().pieChartOptionsHostMem;\r\n    $scope.optionsHostDisk = visualisationConfigs().pieChartOptionsHostDisk;\r\n\r\n    runApp();\r\n\r\n    ///////////////////////\r\n\r\n    $scope.parseFloat = parseFloat;\r\n\r\n    // On Network event\r\n    $scope.events.click = onNetworkClick;\r\n    $scope.events.hoverNode = showServiceNodes;\r\n\r\n    // On InfoPanel click\r\n    $scope.showExecutorsRunning = showExecutorsRunning;\r\n    $scope.showFrameworksActive = showFrameworksActive;\r\n\r\n    // Show right Toolbar\r\n    $scope.showRightToolbar = showRightToolbar;\r\n\r\n    //////////////////////\r\n\r\n    function runApp() {\r\n      ClusterName.get()\r\n        .then(function(response) {\r\n          $scope.clusterName = response.data.items[0].Clusters.cluster_name;\r\n        })\r\n        .then(function() {\r\n          return Components.getMasters($scope.clusterName);\r\n        })\r\n        .then(function(mastersData) {\r\n          var masterItems = mastersData.data.host_components;\r\n          var promises = [];\r\n          $scope.mastersList = [];\r\n          for (var i = 0; i < masterItems.length; i++) {\r\n            promises.push(getMetricsForActiveMasterInfoSidebar(masterItems[i].HostRoles.host_name));\r\n          }\r\n          return $q.all(promises);\r\n        })\r\n        .then(function() {\r\n          return Components.getSlaves($scope.clusterName);\r\n        })\r\n        .then(function(slavesData) {\r\n          var hostItems = slavesData.data.host_components;\r\n          var promises = [];\r\n          $scope.allHostsList = [];\r\n          for (var k = 0; k < hostItems.length; k++) {\r\n            promises.push(getMetricsForHostsInfoPanel(hostItems[k].HostRoles.host_name));\r\n          }\r\n          return $q.all(promises);\r\n        })\r\n        .then(function() {\r\n          drawNetwork($scope.allHostsList);\r\n        })\r\n        // Refresh data every 10 seconds. WARNING! Causes Network rerender\r\n        // .then(function() {\r\n        //   promise = $timeout(runApp, 10 * 1000);\r\n        // })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n\r\n    function getMetricsForActiveMasterInfoSidebar(masterHost) {\r\n      $scope.mastersList.push(masterHost);\r\n      return Metrics.getForMaster(VERSION, masterHost)\r\n        .then(function(response) {\r\n          var items = response.data;\r\n\r\n          if(items[\"master/elected\"] === 1.0) {\r\n            $scope.activeMaster = masterHost;\r\n\r\n            activeMasterDataTemp.cpu = [{\r\n              name: \"Used\",\r\n              size: items[\"master/cpus_used\"]\r\n            }, {\r\n              name: \"Free\",\r\n              size: items[\"master/cpus_total\"] - items[\"master/cpus_used\"]\r\n            }];\r\n\r\n            activeMasterDataTemp.mem = [{\r\n              name: \"Used\",\r\n              size: (items[\"master/mem_used\"] / 1024).toFixed(2)\r\n            }, {\r\n              name: \"Free\",\r\n              size: ((items[\"master/mem_total\"] - items[\"master/mem_used\"]) / 1024).toFixed(2)\r\n            }];\r\n\r\n            activeMasterDataTemp.disk = [{\r\n              name: \"Used\",\r\n              size: (items[\"master/disk_used\"] / 1024).toFixed(2)\r\n            }, {\r\n              name: \"Free\",\r\n              size: ((items[\"master/disk_total\"] - items[\"master/disk_used\"]) / 1024).toFixed(2)\r\n            }];\r\n          }\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getMetricsForHostsInfoPanel(host) {\r\n      return Metrics.getForHost(VERSION, host)\r\n        .then(function(response) {\r\n          var items = response.data;\r\n\r\n          var hostData = {};\r\n\r\n          hostData.id = host;\r\n          hostData.general = items;\r\n\r\n          hostData.cpu = [{\r\n            name: 'Used',\r\n            size: items['slave/cpus_used']\r\n          }, {\r\n            name: 'Free',\r\n            size: items['slave/cpus_total'] - items['slave/cpus_used']\r\n          }];\r\n\r\n          hostData.mem = [{\r\n            name: 'Used',\r\n            size: (items['slave/mem_used'] / 1024).toFixed(2)\r\n          }, {\r\n            name: 'Free',\r\n            size: ((items['slave/mem_total'] - items['slave/mem_used']) / 1024).toFixed(2)\r\n          }];\r\n\r\n          hostData.disk = [{\r\n            name: 'Used',\r\n            size: (items['slave/disk_used'] / 1024).toFixed(2)\r\n          }, {\r\n            name: 'Free',\r\n            size: ((items['slave/disk_total'] - items['slave/disk_used']) / 1024).toFixed(2)\r\n          }];\r\n\r\n          $scope.allHostsList.push(hostData);\r\n        });\r\n    }\r\n\r\n\r\n    function drawNetwork(hostItems) {\r\n      var tmpNodeArr = [];\r\n      var tmpEdgeArr = [];\r\n\r\n      var nodesIdCounter = 1;\r\n      var edgeIdCounter = 1;\r\n\r\n      var notUsedMasterHost = 0;\r\n\r\n      for (var i = 0; i < hostItems.length; i++) {\r\n        var itemHostName = hostItems[i].id;\r\n\r\n        if (itemHostName === $scope.activeMaster) {\r\n          // Active Master\r\n          var activeMasterNode = visualisationConfigs().networkNodeMaster;\r\n          activeMasterNode.id = 1;\r\n          activeMasterNode.label = $scope.activeMaster;\r\n          tmpNodeArr.push(activeMasterNode);\r\n\r\n        } else if (itemHostName !== $scope.activeMaster && itemHostName.indexOf(\"master\") > -1) {\r\n          // Not Active Master\r\n          var notActiveMasterNode = visualisationConfigs().networkNodeMaster;\r\n          notActiveMasterNode.id = ++nodesIdCounter;\r\n          notActiveMasterNode.label = itemHostName;\r\n          tmpNodeArr.push(notActiveMasterNode);\r\n\r\n          notUsedMasterHost = nodesIdCounter;\r\n        } else {\r\n          // Slaves\r\n          var hostNode = visualisationConfigs().networkNodeSlave;\r\n          hostNode.id = ++nodesIdCounter;\r\n          hostNode.label = itemHostName;\r\n          tmpNodeArr.push(hostNode);\r\n\r\n          var hostEdge = visualisationConfigs().networkEdgeSlave;\r\n          hostEdge.id = edgeIdCounter++;\r\n          hostEdge.to = nodesIdCounter;\r\n          tmpEdgeArr.push(hostEdge);\r\n        }\r\n      }\r\n\r\n      var networkNodesService = visualisationConfigs().networkNodesService;\r\n      var networkEdgesService = visualisationConfigs().networkEdgesService;\r\n\r\n      for (var j = 0; j < networkNodesService.length; j++){\r\n        tmpNodeArr.push(networkNodesService[j]);\r\n      }\r\n      for (var k = 0; k < networkEdgesService.length; k++){\r\n        tmpEdgeArr.push(networkEdgesService[k]);\r\n      }\r\n\r\n      if ($scope.nodes.length !== tmpNodeArr.length || $scope.edges.length !== tmpEdgeArr.length) {\r\n        $scope.nodes = tmpNodeArr;\r\n        $scope.edges = tmpEdgeArr;\r\n\r\n        $scope.network_data = {\r\n          nodes: new vis.DataSet($scope.nodes),\r\n          edges: new vis.DataSet($scope.edges)\r\n        };\r\n      }\r\n    }\r\n\r\n\r\n    function onNetworkClick(data) {\r\n      var nodeId = data.nodes[0];\r\n\r\n      switch (nodeId) {\r\n        case 10000:\r\n          generateChart('cpu');\r\n          break;\r\n        case 10001:\r\n          generateChart('mem');\r\n          break;\r\n        case 10002:\r\n          generateChart('disk');\r\n          break;\r\n        case 10003:\r\n          generateAllChart();\r\n          break;\r\n        default:\r\n          angular.forEach($scope.network_data.nodes, function(node) {\r\n            if(node.id !== 10000 && node.id !== 10001 && node.id !== 10002 && node.id !== 10003) {\r\n              if (node.title !== undefined) {\r\n                $scope.network_data.nodes.update([{\r\n                  id: node.id,\r\n                  shape: 'circle',\r\n                  label: node.title,\r\n                  title: undefined\r\n                }]);\r\n              }\r\n            }\r\n          });\r\n          showHostInfoPanel(data);\r\n      }\r\n    }\r\n\r\n\r\n    function showHostInfoPanel(data) {\r\n      if ($scope.infoPanel === false) {\r\n        $scope.infoPanel = true;\r\n      }\r\n      if (data.nodes[0] === undefined) {\r\n        $scope.infoPanel = false;\r\n      }\r\n\r\n      angular.forEach($scope.nodes, function(value, key) {\r\n        if (data.nodes[0] === value.id) {\r\n          for (var i = 0; i < $scope.allHostsList.length; i++){\r\n            if($scope.allHostsList[i].id === value.label) {\r\n              $scope.hostData.id = $scope.allHostsList[i].id;\r\n              $scope.hostData.general = $scope.allHostsList[i].general;\r\n              $scope.hostData.cpu = $scope.allHostsList[i].cpu;\r\n              $scope.hostData.mem = $scope.allHostsList[i].mem;\r\n              $scope.hostData.disk = $scope.allHostsList[i].disk;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    function showServiceNodes(data) {\r\n      var nodeId = data.node;\r\n      if (nodeId === 1) {\r\n        $scope.network_data.nodes.update([{\r\n          id: 10000,\r\n          hidden: false\r\n        }]);\r\n        $scope.network_data.nodes.update([{\r\n          id: 10001,\r\n          hidden: false\r\n        }]);\r\n        $scope.network_data.nodes.update([{\r\n          id: 10002,\r\n          hidden: false\r\n        }]);\r\n        $scope.network_data.nodes.update([{\r\n          id: 10003,\r\n          hidden: false\r\n        }]);\r\n      } else if (nodeId != 10000 && nodeId != 10001 && nodeId != 10002 && nodeId != 10003 && nodeId != 10004) {\r\n        $scope.network_data.nodes.update([{\r\n          id: 10000,\r\n          hidden: true\r\n        }]);\r\n        $scope.network_data.nodes.update([{\r\n          id: 10001,\r\n          hidden: true\r\n        }]);\r\n        $scope.network_data.nodes.update([{\r\n          id: 10002,\r\n          hidden: true\r\n        }]);\r\n        $scope.network_data.nodes.update([{\r\n          id: 10003,\r\n          hidden: true\r\n        }]);\r\n      }\r\n    }\r\n\r\n    function showExecutorsRunning(hostName) {\r\n      ActiveMasterData.getState(VERSION, $scope.activeMaster)\r\n        .then(function(response) {\r\n          var allData = response.data;\r\n\r\n          angular.forEach(allData.slaves, function(value, key) {\r\n            if (value.hostname === hostName) {\r\n              var prefix = value.pid.replace(new RegExp(\"(.*)@(.*)\"), \"$1\");\r\n              var host = value.pid.replace(new RegExp(\"(.*)@(.*)\"), \"$2\");\r\n              var stateUrl = 'http://' + host + '/' + prefix + '/state.json';\r\n\r\n              Frameworks.get(VERSION, stateUrl)\r\n                .then(function(frameworkValues) {\r\n                  $scope.executorsRunning = [];\r\n\r\n                  angular.forEach(frameworkValues.data.frameworks, function(framework, keyFrameworks) {\r\n                    angular.forEach(framework.executors, function(executor, keyExecutor) {\r\n                      var executorTemp = {\r\n                        name: executor.name,\r\n                        cpu: executor.resources.cpus.toFixed(2),\r\n                        mem: (executor.resources.mem / 1024).toFixed(2),\r\n                        disk: (executor.resources.disk / 1024).toFixed(2)\r\n                      };\r\n                      $scope.executorsRunning.push(executorTemp);\r\n                    });\r\n                  });\r\n                })\r\n                .catch(function(err) {\r\n                  console.log(err);\r\n                });\r\n            }\r\n          });\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function showFrameworksActive(hostName) {\r\n      ActiveMasterData.getState(VERSION, $scope.activeMaster)\r\n        .then(function(resource) {\r\n          var allData = resource.data;\r\n\r\n          angular.forEach(allData.slaves, function(value, key) {\r\n            if (value.hostname === hostName) {\r\n              var prefix = value.pid.replace(new RegExp(\"(.*)@(.*)\"), \"$1\");\r\n              var host = value.pid.replace(new RegExp(\"(.*)@(.*)\"), \"$2\");\r\n              var stateUrl = \"http://\" + host + \"/\" + prefix + \"/state.json\";\r\n\r\n              Frameworks.get(VERSION, stateUrl)\r\n                .then(function(frameworkValues) {\r\n                  $scope.frameworksActive = [];\r\n\r\n                  angular.forEach(frameworkValues.data.frameworks, function(framework, keyFrameworks) {\r\n                    var frameworkTemp = {\r\n                      name: framework.name\r\n                    };\r\n                    $scope.frameworksActive.push(frameworkTemp);\r\n                  });\r\n                })\r\n                .catch(function(err) {\r\n                  console.log(err);\r\n                });\r\n            }\r\n          });\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function showRightToolbar() {\r\n      $mdSidenav('right').toggle();\r\n\r\n      // Reasigning need because of bug: https://github.com/krispo/angular-nvd3/issues/85\r\n      $timeout(function () {\r\n        $scope.activeMaster.cpu = activeMasterDataTemp.cpu;\r\n        $scope.activeMaster.mem = activeMasterDataTemp.mem;\r\n        $scope.activeMaster.disk = activeMasterDataTemp.disk;\r\n      }, 500);\r\n    }\r\n\r\n\r\n    function generateChart(metric) {\r\n      angular.forEach($scope.nodes, function(value) {\r\n        if (value.label === $scope.activeMaster || value.group === 2) {\r\n          var hostName = value.label;\r\n\r\n          var canvas = document.getElementById(\"canPrep\");\r\n          var ctx = canvas.getContext(\"2d\");\r\n          var lastend = 0;\r\n\r\n          var data = [];\r\n          var dataTotal = 100;\r\n\r\n          var color = [];\r\n\r\n          var used = null;\r\n          var free = null;\r\n          var total = null;\r\n\r\n          var i = null;\r\n          var length = null;\r\n\r\n          switch (metric) {\r\n            case 'cpu':\r\n              color = [\"#A98CEF\", \"#512DA8\"];\r\n              for (i = 0, length = $scope.allHostsList.length; i < length; i++) {\r\n                if(value.label === $scope.allHostsList[i].id) {\r\n                  used = parseFloat($scope.allHostsList[i].cpu[0].size);\r\n                  free = parseFloat($scope.allHostsList[i].cpu[1].size);\r\n                  total = used + free;\r\n                  data = [(free / total) * 100, 100 - (free / total) * 100];\r\n                }\r\n              }\r\n              break;\r\n            case 'mem':\r\n              color = [\"#9C27B0\", \"#E691F5\"];\r\n              for (i = 0, length = $scope.allHostsList.length; i < length; i++) {\r\n                if(value.label === $scope.allHostsList[i].id) {\r\n                  used = parseFloat($scope.allHostsList[i].mem[0].size);\r\n                  free = parseFloat($scope.allHostsList[i].mem[1].size);\r\n                  total = used + free;\r\n                  data = [(free / total) * 100, 100 - (free / total) * 100];\r\n                }\r\n              }\r\n              break;\r\n            case 'disk':\r\n              color = [\"#A8ECF5\", \"#00BCD4\"];\r\n              for (i = 0, length = $scope.allHostsList.length; i < length; i++) {\r\n                if(value.label === $scope.allHostsList[i].id) {\r\n                  used = parseFloat($scope.allHostsList[i].disk[0].size);\r\n                  free = parseFloat($scope.allHostsList[i].disk[1].size);\r\n                  total = used + free;\r\n                  data = [(free / total) * 100, 100 - (free / total) * 100];\r\n                }\r\n              }\r\n              break;\r\n            default:\r\n              console.log('unknown \"metric\" parametr');\r\n          }\r\n\r\n          for (i = 0; i < data.length; i++) {\r\n            ctx.fillStyle = color[i];\r\n            ctx.beginPath();\r\n            ctx.moveTo(canvas.width / 2, canvas.height / 2);\r\n            ctx.arc(canvas.width / 2, canvas.height / 2, canvas.height / 2, lastend, lastend + (Math.PI * 2 * (data[i] / dataTotal)), false);\r\n            ctx.lineTo(canvas.width / 2, canvas.height / 2);\r\n            ctx.fill();\r\n            lastend += Math.PI * 2 * (data[i] / dataTotal);\r\n          }\r\n\r\n          var dataUrl = canvas.toDataURL();\r\n          var nodeId = value.id;\r\n\r\n          $scope.network_data.nodes.update([{\r\n            id: nodeId,\r\n            shape: 'circularImage',\r\n            label: '',\r\n            title: hostName,\r\n            image: dataUrl\r\n          }]);\r\n        }\r\n      });\r\n    }\r\n\r\n    function generateAllChart() {\r\n      document.getElementById('chartNodeUsage').innerHTML = '';\r\n      var k = 0;\r\n      angular.forEach($scope.nodes, function(value) {\r\n        if (value.label === $scope.activeMaster || value.group === 2) {\r\n          // Creating scope for each circle\r\n          drawCircleChart(k, value);\r\n          k++;\r\n        }\r\n      });\r\n    }\r\n\r\n    function drawCircleChart(k, value) {\r\n      var hostName = value.label;\r\n\r\n      var graphSettings = {\r\n        series: [{\r\n          value: null,\r\n          color: {\r\n            solid: '#512DA8',\r\n            background: 'rgba(128, 128, 128, 0.81)'\r\n          },\r\n        }, {\r\n          value: null,\r\n          color: {\r\n            solid: '#9C27B0',\r\n            background: 'rgba(128, 128, 128, 0.81)'\r\n          },\r\n        }, {\r\n          value: null,\r\n          color: {\r\n            solid: '#00BCD4',\r\n            background: 'rgba(128, 128, 128, 0.81)'\r\n          },\r\n        }],\r\n        shadow: {\r\n          width: 0\r\n        },\r\n        animation: {\r\n          duration: 1,\r\n          delay: 1\r\n        },\r\n        diameter: 135\r\n      };\r\n\r\n      for (var i = 0, length = $scope.allHostsList.length; i < length; i++) {\r\n        if(value.label === $scope.allHostsList[i].id) {\r\n          graphSettings.series[0].value = parseFloat($scope.allHostsList[i].cpu[0].size) / (parseFloat($scope.allHostsList[i].cpu[0].size) + parseFloat($scope.allHostsList[i].cpu[1].size)) * 100;\r\n          graphSettings.series[1].value = parseFloat($scope.allHostsList[i].mem[0].size) / (parseFloat($scope.allHostsList[i].mem[0].size) + parseFloat($scope.allHostsList[i].mem[1].size)) * 100;\r\n          graphSettings.series[2].value = parseFloat($scope.allHostsList[i].disk[0].size) / (parseFloat($scope.allHostsList[i].disk[0].size) + parseFloat($scope.allHostsList[i].disk[1].size)) * 100;\r\n        }\r\n      }\r\n\r\n      var cont = document.createElement('div');\r\n      cont.setAttribute(\"id\", \"child\" + k);\r\n      document.getElementById('chartNodeUsage').appendChild(cont);\r\n\r\n      new RadialProgressChart(\"#child\" + k, graphSettings);\r\n\r\n      $timeout(function () {\r\n        document.getElementById('canPrep').width = 400;\r\n        document.getElementById('canPrep').height = 400;\r\n        var nodeId = value.id;\r\n        var svgString = new XMLSerializer().serializeToString(document.getElementById('child' + k).querySelector('svg'));\r\n        var canvas = document.getElementById(\"canPrep\");\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var DOMURL = self.URL || self.webkitURL || self;\r\n        var img = new Image();\r\n        var svg = new Blob([svgString], {\r\n          type: \"image/svg+xml;charset=utf-8\"\r\n        });\r\n        var url = DOMURL.createObjectURL(svg);\r\n\r\n        img.onload = function() {\r\n          ctx.fillStyle = '#B3CCDD';\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n          ctx.drawImage(img, 0, 0);\r\n          var dataUrl = canvas.toDataURL();\r\n          $scope.network_data.nodes.update([{\r\n            id: nodeId,\r\n            shape: 'circularImage',\r\n            label: '',\r\n            title: hostName,\r\n            image: dataUrl\r\n          }]);\r\n          DOMURL.revokeObjectURL(dataUrl);\r\n        };\r\n\r\n        img.src = url;\r\n      }, 100);\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('RollbackAppDeployCtrl', RollbackAppDeployCtrl);\r\n\r\n  RollbackAppDeployCtrl.$inject = ['$scope', '$mdDialog', 'AppsDeployments', 'deployId', 'hostName'];\r\n\r\n  function RollbackAppDeployCtrl($scope, $mdDialog, AppsDeployments, deployId, hostName) {\r\n\r\n    $scope.submitDestory = submitDestory;\r\n    $scope.cancelDestory = cancelDestory;\r\n\r\n    /////////////////////\r\n\r\n    function submitDestory() {\r\n      AppsDeployments.rollback(hostName, deployId)\r\n        .then(function(response) {\r\n          $mdDialog.cancel();\r\n          console.log(response);\r\n        });\r\n    }\r\n\r\n    function cancelDestory() {\r\n      $mdDialog.cancel();\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('StopAppDeployCtrl', StopAppDeployCtrl);\r\n\r\n  StopAppDeployCtrl.$inject = ['$scope', '$mdDialog', 'AppsDeployments', 'deployId', 'hostName'];\r\n\r\n  function StopAppDeployCtrl($scope, $mdDialog, AppsDeployments, deployId, hostName) {\r\n\r\n    $scope.submitStop = submitStop;\r\n    $scope.cancelStop = cancelStop;\r\n\r\n    ////////////////////\r\n\r\n    function submitStop() {\r\n      AppsDeployments.stop(hostName, deployId)\r\n        .then(function(response) {\r\n          $mdDialog.cancel();\r\n        });\r\n    }\r\n\r\n    function cancelStop() {\r\n      $mdDialog.cancel();\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('DestroyAppCtrl', DestroyAppCtrl);\r\n\r\n  DestroyAppCtrl.$inject = ['$scope', '$mdDialog', '$routeParams', '$location', 'AppActions', 'HostName'];\r\n\r\n  function DestroyAppCtrl($scope, $mdDialog, $routeParams, $location, AppActions, HostName) {\r\n    $scope.appID = decodeURIComponent($routeParams.id);\r\n\r\n    $scope.cancel = cancel;\r\n    $scope.submit = submit;\r\n\r\n    ///////////////\r\n\r\n    function cancel() {\r\n      $mdDialog.cancel();\r\n    }\r\n\r\n    function submit() {\r\n      HostName.get()\r\n        .then(function(hostName) {\r\n          AppActions.destroy(hostName, $scope.appID)\r\n            .then(function(response) {\r\n              $mdDialog.cancel();\r\n              $location.path('/apps');\r\n            });\r\n        });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('NewAppCtrl', NewAppCtrl);\r\n\r\n  NewAppCtrl.$inject = ['$scope', '$mdDialog', '$mdMedia', 'AppActions', 'HostName'];\r\n\r\n  function NewAppCtrl($scope, $mdDialog, $mdMedia, AppActions, HostName) {\r\n    $scope.status = '  ';\r\n\r\n    $scope.docker_networks = [{ netid: 'HOST', value: 'Host' }, { netid: 'BRIDGE', value: 'Bridged' }];\r\n    $scope.docker_protocols = [{ netid: 'tcp', value: 'tcp' }, { netid: 'udp', value: 'udp' }];\r\n    $scope.docker_volume_modes = [{ netid: 'RO', value: 'Read Only' }, { netid: 'RW', value: 'Read and Write' }];\r\n\r\n    $scope.cancel = function() {\r\n      console.log('hihihi');\r\n      $mdDialog.cancel();\r\n    };\r\n\r\n    $scope.submit = function() {\r\n\r\n      if ($scope.newapp.container) {\r\n        if ($scope.newapp.container.docker) {\r\n          if ($scope.newapp.container.docker.portMappings) {\r\n            var ports_array = [];\r\n            var ports = $scope.newapp.container.docker.portMappings;\r\n            angular.forEach(ports, function(element) {\r\n              ports_array.push(element);\r\n            });\r\n            $scope.newapp.container.docker.portMappings = ports_array;\r\n          }\r\n\r\n          if ($scope.newapp.container.docker.parameters) {\r\n            var docker_params = [];\r\n            var params_array = $scope.newapp.container.docker.parameters;\r\n            angular.forEach(params_array, function(element) {\r\n              docker_params.push(element);\r\n            });\r\n            $scope.newapp.container.docker.parameters = docker_params;\r\n          }\r\n        }\r\n\r\n\r\n        if ($scope.newapp.container.volumes) {\r\n          var docker_volumes = [];\r\n          var volumes_array = $scope.newapp.container.volumes;\r\n          angular.forEach(volumes_array, function(element) {\r\n            docker_volumes.push(element);\r\n          });\r\n          $scope.newapp.container.volumes = docker_volumes;\r\n        }\r\n      }\r\n\r\n      if ($scope.newapp.env) {\r\n        var newapp_env_array = {};\r\n        var newapp_env = $scope.newapp.env;\r\n        angular.forEach(newapp_env, function(element) {\r\n          newapp_env_array[element['key']] = element['value'];\r\n        });\r\n        $scope.newapp.env = newapp_env_array;\r\n      }\r\n\r\n      if ($scope.newapp.constraints.length > 0) {\r\n        $scope.newapp.constraints = [$scope.newapp.constraints];\r\n      }\r\n\r\n\r\n      var data = $scope.newapp;\r\n\r\n      HostName.get()\r\n        .then(function(response) {\r\n          $scope.hostName = response;\r\n          postNewApp(data);\r\n        });\r\n\r\n      function postNewApp(data) {\r\n        AppActions.create($scope.hostName, data)\r\n          .then(function(response) {\r\n            if (response.data.httpStatusCode === 201) {\r\n              $mdDialog.cancel();\r\n              $scope.responseMessage = \"\";\r\n            } else if (response.data.httpStatusCode === 422) {\r\n              $scope.responseMessage = response.data.errors[0].error;\r\n            } else {\r\n              $scope.responseMessage = response.data.message;\r\n            }\r\n          });\r\n      }\r\n    };\r\n\r\n    $scope.portMappings = [{\r\n      \"Selection\": \"\",\r\n      \"Text\": \"\"\r\n    }];\r\n\r\n    $scope.addPortMappings = function() {\r\n      var itemToClone = {\r\n        \"Selection\": \"\",\r\n        \"Text\": \"\"\r\n      };\r\n      $scope.portMappings.push(itemToClone);\r\n    };\r\n\r\n    $scope.removePortMappings = function(itemIndex) {\r\n      $scope.portMappings.splice(itemIndex, 1);\r\n    };\r\n\r\n    $scope.dockerParameters = [{\r\n      \"Selection\": \"\",\r\n      \"Text\": \"\"\r\n    }];\r\n\r\n    $scope.addDockerParameter = function() {\r\n      var itemToClone = {\r\n        \"Selection\": \"\",\r\n        \"Text\": \"\"\r\n      };\r\n      $scope.dockerParameters.push(itemToClone);\r\n    };\r\n\r\n    $scope.removeDockerParameter = function(itemIndex) {\r\n      $scope.dockerParameters.splice(itemIndex, 1);\r\n    };\r\n\r\n\r\n    $scope.dockerVolumes = [{\r\n      \"Selection\": \"\",\r\n      \"Text\": \"\"\r\n    }];\r\n\r\n    $scope.addDockerVolume = function() {\r\n      var itemToClone = {\r\n        \"Selection\": \"\",\r\n        \"Text\": \"\"\r\n      };\r\n      $scope.dockerVolumes.push(itemToClone);\r\n    };\r\n\r\n    $scope.removeDockerVolume = function(itemIndex) {\r\n      $scope.dockerVolumes.splice(itemIndex, 1);\r\n    };\r\n\r\n    $scope.newappEnv = [{\r\n      \"Selection\": \"\",\r\n      \"Text\": \"\"\r\n    }];\r\n\r\n    $scope.addNewAppEnv = function() {\r\n      var itemToClone = {\r\n        \"Selection\": \"\",\r\n        \"Text\": \"\"\r\n      };\r\n      $scope.newappEnv.push(itemToClone);\r\n    };\r\n\r\n    $scope.removeNewAppEnv = function(itemIndex) {\r\n      $scope.newappEnv.splice(itemIndex, 1);\r\n    };\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('RestartAppCtrl', RestartAppCtrl);\r\n\r\n  RestartAppCtrl.$inject = ['$scope', '$mdDialog', '$routeParams', '$location', 'HostName', 'AppActions'];\r\n\r\n  function RestartAppCtrl($scope, $mdDialog, $routeParams, $location, HostName, AppActions) {\r\n    $scope.appID = decodeURIComponent($routeParams.id);\r\n\r\n    $scope.cancel = cancel;\r\n    $scope.submit = submit;\r\n\r\n    ///////////////\r\n\r\n    function cancel() {\r\n      $mdDialog.cancel();\r\n    }\r\n\r\n    function submit() {\r\n      HostName.get()\r\n        .then(function(hostName) {\r\n          AppActions.restart(hostName, $scope.appID)\r\n            .then(function(response) {\r\n              $mdDialog.cancel();\r\n              $location.path('/apps');\r\n            });\r\n        });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('ScaleAppCtrl', ScaleAppCtrl);\r\n\r\n  ScaleAppCtrl.$inject = ['$scope', '$mdDialog', '$routeParams', 'AppActions', 'HostName'];\r\n\r\n  function ScaleAppCtrl($scope, $mdDialog, $routeParams, AppActions, HostName) {\r\n    $scope.appID = decodeURIComponent($routeParams.id);\r\n    var hostName = null;\r\n\r\n    $scope.parametrs = {\r\n      instances: \"Loading...\"\r\n    };\r\n\r\n    HostName.get()\r\n      .then(function(response) {\r\n        hostName = response;\r\n        AppActions.getVersion(hostName, $scope.appID)\r\n          .then(function(response) {\r\n            var appVersion = response;\r\n            AppActions.get(hostName, $scope.appID, appVersion)\r\n              .then(function(response) {\r\n                $scope.appConfig = response;\r\n                $scope.parametrs.instances = $scope.appConfig.instances;\r\n              });\r\n          });\r\n      });\r\n\r\n    $scope.cancel = cancel;\r\n    $scope.submit = submit;\r\n\r\n    ///////////////\r\n\r\n    function cancel() {\r\n      $mdDialog.cancel();\r\n    }\r\n\r\n    function submit() {\r\n      HostName.get()\r\n        .then(function(response) {\r\n          hostName = response;\r\n          $scope.appConfig.instances = $scope.parametrs.instances;\r\n\r\n          delete $scope.appConfig.httpStatusCode;\r\n          delete $scope.appConfig.version;\r\n          delete $scope.appConfig.versionInfo;\r\n\r\n          AppActions.scale(hostName, $scope.appID, $scope.appConfig)\r\n            .then(function(response) {\r\n              $mdDialog.cancel();\r\n            });\r\n        });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('SuspendAppCtrl', SuspendAppCtrl);\r\n\r\n  SuspendAppCtrl.$inject = ['$scope', '$mdDialog', '$routeParams', 'AppActions', 'HostName'];\r\n\r\n  function SuspendAppCtrl($scope, $mdDialog, $routeParams, AppActions, HostName) {\r\n    $scope.appID = decodeURIComponent($routeParams.id);\r\n\r\n    var hostName = null;\r\n\r\n    $scope.cancel = cancel;\r\n    $scope.submit = submit;\r\n\r\n    HostName.get()\r\n      .then(function(response) {\r\n        hostName = response;\r\n        return AppActions.getVersion(hostName, $scope.appID);\r\n      })\r\n      .then(function(appVersion) {\r\n        return AppActions.get(hostName, $scope.appID, appVersion);\r\n      })\r\n      .then(function(response) {\r\n        $scope.appConfig = response;\r\n      })\r\n      .catch(function(err) {\r\n        console.log(err);\r\n      });\r\n\r\n    ///////////////\r\n\r\n    function cancel() {\r\n      $mdDialog.cancel();\r\n    }\r\n\r\n    function submit() {\r\n      HostName.get()\r\n        .then(function(response) {\r\n          hostName = response;\r\n          $scope.appConfig.instances = 0;\r\n\r\n          delete $scope.appConfig.httpStatusCode;\r\n          delete $scope.appConfig.version;\r\n          delete $scope.appConfig.versionInfo;\r\n\r\n          AppActions.suspend(hostName, $scope.appID, $scope.appConfig)\r\n            .then(function(response) {\r\n              $mdDialog.cancel();\r\n            });\r\n        });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .controller('ToolbarCtrl', ToolbarCtrl);\r\n\r\n  ToolbarCtrl.$inject = [];\r\n\r\n  function ToolbarCtrl() {\r\n    var vm = this;\r\n\r\n    ///////////////\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .directive('toolbar', toolbar);\r\n\r\n  function toolbar() {\r\n    return {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/toolbar/toolbar.tpl.html',\r\n      controller: 'ToolbarCtrl'\r\n    };\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .filter('toFixed', toFixed);\r\n\r\n  function toFixed() {\r\n    return function(input) {\r\n      return input.toFixed(2);\r\n    };\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .filter('toGb', toGb);\r\n\r\n  function toGb() {\r\n    return function(input) {\r\n      return (input / 1024).toFixed(2);\r\n    };\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .filter('toHPath', toHPath);\r\n\r\n  function toHPath() {\r\n    return function(input) {\r\n      if (input == '..') {\r\n        return input;\r\n      }\r\n      return input.replace(new RegExp(\"(.*)/(.*)\"), \"$2\");\r\n    };\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .filter('truncateMesosID', truncateMesosID);\r\n\r\n  function truncateMesosID() {\r\n    return function(id) {\r\n      if (id) {\r\n        var truncatedIdParts = id.split('-');\r\n\r\n        if (truncatedIdParts.length > 3) {\r\n          return '...' + truncatedIdParts.splice(3, 3).join('-');\r\n        } else {\r\n          return id;\r\n        }\r\n      } else {\r\n        return '';\r\n      }\r\n    };\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('ClusterName', ClusterNameFactory);\r\n\r\n  ClusterNameFactory.$inject = ['$http'];\r\n\r\n  function ClusterNameFactory($http) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    // http://nikke1.github.io/hard-data/clusters-mesos.json\r\n    // /api/v1/clusters\r\n\r\n    function get() {\r\n      return $http.get('/api/v1/clusters')\r\n        .then(function successClusterName(response) {\r\n          return response.data.items[0].Clusters.cluster_name;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('HostName', HostNameFactory);\r\n\r\n  HostNameFactory.$inject = ['$http', 'ClusterName'];\r\n\r\n  function HostNameFactory($http, ClusterName) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    function get() {\r\n      return ClusterName.get()\r\n        .then(function(clusterName) {\r\n          return $http.get('/api/v1/clusters/' + clusterName + '/components/MARATHON');\r\n        })\r\n        .then(function(response) {\r\n          return response.data.host_components[0].HostRoles.host_name;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppActions', AppActionsFactory);\r\n\r\n  AppActionsFactory.$inject = ['$http'];\r\n\r\n  function AppActionsFactory($http) {\r\n    var config = {\r\n      headers: {\r\n        'X-Requested-By': null,\r\n        'X-Requested-With': 'XMLHttpRequest'\r\n      }\r\n    };\r\n\r\n    return {\r\n      destroy: destroy,\r\n      killTask: killTask,\r\n      create: create,\r\n      restart: restart,\r\n      getVersion: getVersion,\r\n      get: get,\r\n      scale: scale,\r\n      suspend: suspend\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    function destroy(hostName, appID) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.delete('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function killTask(hostName, tasksToKill, shouldScale) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.post('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/tasks/delete?scale=' + shouldScale, tasksToKill, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function create(hostName, data) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.post('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps', data, config)\r\n        .then(function(response) {\r\n          console.log(response);\r\n          return response;\r\n        })\r\n        .catch(function (err) {\r\n          console.error(err);\r\n        });\r\n    }\r\n\r\n    function restart(hostName, appID) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      var data = {};\r\n      return $http.post('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '/restart', data, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getVersion(hostName, appID) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '/versions', config)\r\n        .then(function(response) {\r\n          return response.data.versions[0];\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function get(hostName, appID, appVersion) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '/versions/' + appVersion, config)\r\n        .then(function (response) {\r\n          return response.data;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function scale(hostName, appID, data) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.put('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '?force=true', data, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function suspend(hostName, appID, data) {\r\n      config.headers['X-Requested-By'] = hostName;\r\n      return $http.put('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '?force=true', data, config)\r\n        .then(function(response) {\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppInfo', AppInfoFactory);\r\n\r\n  AppInfoFactory.$inject = ['$http'];\r\n\r\n  function AppInfoFactory($http) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n    // /api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '?embed=app.taskStats\r\n\r\n    // for Brunch server\r\n    // http://nikke1.github.io/hard-data/mesos.json\r\n    function get(hostName, appID) {\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps/' + appID + '?embed=app.taskStats')\r\n        .then(function(response) {\r\n          return response.data;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppsDeployments', AppsDeploymentsFactory);\r\n\r\n  AppsDeploymentsFactory.$inject = ['$http'];\r\n\r\n  function AppsDeploymentsFactory($http) {\r\n    return {\r\n      get: get,\r\n      stop: stop,\r\n      rollback: rollback\r\n    };\r\n\r\n    ////////////////////\r\n\r\n    function get(hostName) {\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/deployments')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function stop(hostName, deployId) {\r\n      var config = {\r\n        headers: {\r\n          'X-Requested-By': hostName,\r\n          'X-Requested-With': 'XMLHttpRequest'\r\n        }\r\n      };\r\n\r\n      return $http.delete('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/deployments/' + deployId, config)\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function rollback(hostName, deployId) {\r\n      var config = {\r\n        headers: {\r\n          'X-Requested-By': hostName,\r\n          'X-Requested-With': 'XMLHttpRequest'\r\n        }\r\n      };\r\n\r\n      return $http.delete('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/deployments/' + deployId + '?force=true', config)\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('AppsTableInfo', AppsTableInfoFactory);\r\n\r\n  AppsTableInfoFactory.$inject = ['$http'];\r\n\r\n  function AppsTableInfoFactory($http) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n    // /api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps\r\n\r\n    // for Brunch server\r\n    // http://nikke1.github.io/hard-data/dataforapps.json\r\n    function get(hostName) {\r\n      return $http.get('/api/v1/views/MARATHON/versions/0.1.0/instances/marathon/resources/proxy/json?url=http://' + hostName + ':8080/v2/apps')\r\n        .then(function(response) {\r\n          return response.data.apps;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('ActiveMasterData', ActiveMasterDataFactory);\r\n\r\n  ActiveMasterDataFactory.$inject = ['$http'];\r\n\r\n  function ActiveMasterDataFactory($http) {\r\n    return {\r\n      getState: getState,\r\n      getSlaves: getSlaves\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    // http://nikke1.github.io/hard-data/active-master-state.json\r\n    // /api/v1/views/MESOS/versions/' + VERSION + '/instances/mesos/resources/proxy/json?url=http://' + activeMaster + ':5050/master/state.json\r\n    function getState(VERSION, activeMaster) {\r\n      return $http.get('http://nikke1.github.io/hard-data/active-master-state.json')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    // http://nikke1.github.io/hard-data/active-master-slaves.json\r\n    // /api/v1/views/MESOS/versions/' + VERSION + '/instances/mesos/resources/proxy/json?url=http://' + activeMaster + ':5050/slaves\r\n    function getSlaves(VERSION, activeMaster) {\r\n      return $http.get('http://nikke1.github.io/hard-data/active-master-slaves.json')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('Components', ComponentsFactory);\r\n\r\n  ComponentsFactory.$inject = ['$http'];\r\n\r\n  function ComponentsFactory($http) {\r\n    return {\r\n      getMasters: getMasters,\r\n      getSlaves: getSlaves\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    // Brunch http://nikke1.github.io/hard-data/mesos-master.json\r\n    // /api/v1/clusters/' + clusterName + '/services/MESOS/components/MESOS_MASTER\r\n\r\n    function getMasters(clusterName) {\r\n      return $http.get('/api/v1/clusters/' + clusterName + '/services/MESOS/components/MESOS_MASTER')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    // Brunch http://nikke1.github.io/hard-data/mesos-slave.json\r\n    //  /api/v1/clusters/' + clusterName + '/services/MESOS/components/MESOS_SLAVE\r\n\r\n    function getSlaves(clusterName) {\r\n      return $http.get('/api/v1/clusters/' + clusterName + '/services/MESOS/components/MESOS_SLAVE')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('Frameworks', FrameworksFactory);\r\n\r\n  FrameworksFactory.$inject = ['$http'];\r\n\r\n  function FrameworksFactory($http) {\r\n    return {\r\n      get: get\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    // /api/v1/views/MESOS/versions/' + VERSION + '/instances/mesos/resources/proxy/json?url=' + stateUrl\r\n    // http://nikke1.github.io/hard-data/mesos-framework-stateurl.json\r\n\r\n    function get(VERSION, stateUrl) {\r\n      return $http.get('http://nikke1.github.io/hard-data/mesos-framework-stateurl.json')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('MesosMarathonApp')\r\n    .factory('Metrics', MetricsFactory);\r\n\r\n  MetricsFactory.$inject = ['$http'];\r\n\r\n  function MetricsFactory($http) {\r\n    return {\r\n      getForMaster: getForMaster,\r\n      getForHost: getForHost\r\n    };\r\n\r\n    ///////////////////\r\n\r\n    // Brunch http://nikke1.github.io/hard-data/1snapshot.json\r\n    // /api/v1/views/MESOS/versions/' + VERSION + '/instances/mesos/resources/proxy/json?url=http://' + masterHost + ':5050/metrics/snapshot\r\n\r\n    function getForMaster(VERSION, masterHost) {\r\n      return $http.get('/api/v1/views/MESOS/versions/' + VERSION + '/instances/mesos/resources/proxy/json?url=http://' + masterHost + ':5050/metrics/snapshot')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function getForHost(VERSION, host) {\r\n      return $http.get('/api/v1/views/MESOS/versions/' + VERSION + '/instances/mesos/resources/proxy/json?url=http://' + host + ':5051/metrics/snapshot')\r\n        .then(function(response) {\r\n          return response;\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n}());\r\n"]}